Postman tips and tricks:
- You can pin it
- Give apropriate names to requets and verifications
- Use folders inside collections for more complex collections
- Use URLS params grid to specify URL params
- Use environment variables for environments
- You can reorder requests with drag and drop
- Requests can be dublicated via righ click -> dublicated
- You can use JavaScript in Pre-Setup steps to generate random data for your requests
- Use Chrome inspector to read console and debug (chrome://inspect/#apps)
- You can run suite multiples times with different data source
- Postman support data driven testing, see 
	http://blog.getpostman.com/2014/10/28/using-csv-and-json-files-in-the-postman-collection-runner/
	https://www.getpostman.com/docs/multiple_instances
- How to get variables:
	http://stackoverflow.com/questions/21418529/how-do-i-read-environment-variables-in-postman-tests
- Use newman for CI and integrations
- When Environemtns are used, then you should specify them as params in newman, example:
	newman -c TelerikPlatfom -e TelerikPlatfom.LIVE
- Use can generate XML and HTML reports:
	newman -c TelerikPlatfom -e TelerikPlatfom.LIVE -x -t result.xml -H result.html	
- Newman also support data driven tests, see https://www.getpostman.com/docs/newman_intro

Register:
http://platform.telerik.com/

Login and click "Create app". Use this flow:
Create app -> Advanced -> Type "Friends" in Search Box -> Select "NativeScript Friends"

Navigate to Settings and get API Key and AppID. 
AppID should looks like this: cicqxw4v2lskdcya
API Key should looks like this: obYeX5Z1hEsEuaV4l8u0Ben56X7NkbVl

Write request that 
- register user (make sure user name and password are unique)
- get all users and verify user count is increased by 1
- get user details and verify user name and email are ok
- delete user
- get user details and verify user is not available
bunus:
- update user and get user details to verify user is updated

Docs:
http://docs.telerik.com/platform/backend-services/rest/users/users-retrieve
http://docs.telerik.com/platform/backend-services/rest/users/users-register
http://docs.telerik.com/platform/backend-services/rest/users/users-delete

Hints:


Get Users Request:
Request:
    GET http://api.everlive.com/v1/your-app-id/Users
Headers:
    Authorization  Bearer your-access-token-here
Response:
    Status: 200 OK
    Content-Type: application/json

Register User:

Request:
    POST http://api.everlive.com/v1/your-app-id/Users 
Headers:
     Content-Type: application/json 
Payload - raw:
    { 
        "Username": "jsmith",
        "Password": "111111",
        "DisplayName": "John Smith",
        "Email": "john.smith@telerik.com"
    } 
Response:
    Status: 201 Created
    Content-Type: application/json


For update and delete user request use:
Authorization	Masterkey <Your API Key>

Additional tasks:
Install newman and run tests via commandline.